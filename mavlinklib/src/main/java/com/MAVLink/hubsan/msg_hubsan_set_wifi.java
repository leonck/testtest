/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE HUBSAN_SET_WIFI PACKING
package com.MAVLink.hubsan;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;

/**
* wifi setting.
*/
public class msg_hubsan_set_wifi extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_HUBSAN_SET_WIFI = 59;
    public static final int MAVLINK_MSG_LENGTH = 44;
    private static final long serialVersionUID = MAVLINK_MSG_ID_HUBSAN_SET_WIFI;


      
    /**
    * System ID
    */
    public short target_system;
      
    /**
    * Component ID
    */
    public short target_component;
      
    /**
    * wifi ssid
    */
    public byte wifi_ssid[] = new byte[30];
      
    /**
    * wifi key
    */
    public byte wifi_key[] = new byte[12];
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket();
        packet.len = MAVLINK_MSG_LENGTH;
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_HUBSAN_SET_WIFI;
              
        packet.payload.putUnsignedByte(target_system);
              
        packet.payload.putUnsignedByte(target_component);
              
        
        for (int i = 0; i < wifi_ssid.length; i++) {
            packet.payload.putByte(wifi_ssid[i]);
        }
                    
              
        
        for (int i = 0; i < wifi_key.length; i++) {
            packet.payload.putByte(wifi_key[i]);
        }
                    
        
        return packet;
    }

    /**
    * Decode a hubsan_set_wifi message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.target_system = payload.getUnsignedByte();
              
        this.target_component = payload.getUnsignedByte();
              
         
        for (int i = 0; i < this.wifi_ssid.length; i++) {
            this.wifi_ssid[i] = payload.getByte();
        }
                
              
         
        for (int i = 0; i < this.wifi_key.length; i++) {
            this.wifi_key[i] = payload.getByte();
        }
                
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_hubsan_set_wifi(){
        msgid = MAVLINK_MSG_ID_HUBSAN_SET_WIFI;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_hubsan_set_wifi(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_HUBSAN_SET_WIFI;
        unpack(mavLinkPacket.payload);        
    }

         
    /**
    * Sets the buffer of this message with a string, adds the necessary padding
    */
    public void setWifi_Ssid(String str) {
        int len = Math.min(str.length(), 30);
        for (int i=0; i<len; i++) {
            wifi_ssid[i] = (byte) str.charAt(i);
        }

        for (int i=len; i<30; i++) {            // padding for the rest of the buffer
            wifi_ssid[i] = 0;
        }
    }

    /**
    * Gets the message, formated as a string
    */
    public String getWifi_Ssid() {
        String result = "";
        for (int i = 0; i < 30; i++) {
            if (wifi_ssid[i] != 0)
                result = result + (char) wifi_ssid[i];
            else
                break;
        }
        return result;

    }
                          
    /**
    * Sets the buffer of this message with a string, adds the necessary padding
    */
    public void setWifi_Key(String str) {
        int len = Math.min(str.length(), 12);
        for (int i=0; i<len; i++) {
            wifi_key[i] = (byte) str.charAt(i);
        }

        for (int i=len; i<12; i++) {            // padding for the rest of the buffer
            wifi_key[i] = 0;
        }
    }

    /**
    * Gets the message, formated as a string
    */
    public String getWifi_Key() {
        String result = "";
        for (int i = 0; i < 12; i++) {
            if (wifi_key[i] != 0)
                result = result + (char) wifi_key[i];
            else
                break;
        }
        return result;

    }
                         
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_HUBSAN_SET_WIFI -"+" target_system:"+target_system+" target_component:"+target_component+" wifi_ssid:"+wifi_ssid+" wifi_key:"+wifi_key+"";
    }
}
        